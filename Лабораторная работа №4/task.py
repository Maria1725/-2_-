class PredatoryAnimal:
    """ Базовый класс """
    def __init__(self, family: str, size: str):
        """
        Создание и подготовка к работе объекта "Хищное животное"
        :param family: Семейство хищного животного
        :param size: Размер хищного животного
        """
        self.family = family
        self.size = size

    def habitat(self, area: str) -> str:
        """
        Функция, которая определяет среду обитания хищного животного
        :param area: Среда обитания хищного животного
        :return: Строка о среде обитания
        """
        return f'Среда обитания: {area}'

    def movement(self, speed: int) -> str:
        """
        Функция, которая определяет среднюю скорость передвижения животного
        :param speed: Скорость передвижения хищного животного в км/ч
        :return: Определение средней скорости передвижения хищного животного
        """
        return f'Средняя скорость передвижения {speed} км/ч'

    def __str__(self) -> str:
        """
        Магический метод для строкового представления объекта
        :return: Строка о семействе и размере хищного животного
        """
        return f"Хищное животное. Семейство: {self.family}. Размер: {self.size}."

    def __repr__(self) -> str:
        """
        Магический метод для создания валидного выражения для воссоздания объекта "Хищное животное"
        :return: Строковое представление объекта "Хищное животное"
        """
        return f"{self.__class__.__name__}(family={self.family!r}, size={self.size!r})"


class Tiger(PredatoryAnimal):
    """ Дочерний класс """
    def __init__(self, family: str, size: str, jump: float):
        """
        Создание и подготовка к работе объекта "Тигр"
        :param family: Семейство тигра
        :param size: Размер тигра
        :param jump: Высота прыжка тигра в метрах
        """
        super().__init__(family, size)
        self.jump = jump

    def movement(self, speed: int) -> str:
        """
        Перегрузка метода movement для уточнения способа передвижения тигра
        :param speed: Средняя скорость бега тигра в км/ч
        :return: Определение средней скорости бега тигра и высоты прыжка
        """
        return f'Средняя скорость бега тигра {speed} км/ч, высота прыжка {self.jump} м.'

    def __str__(self) -> str:
        """
        Перегрузка магического метода для указания вида хищного животного для строкового представления объекта
        :return: Строка о семействе и размере хищного животного "Тигр"
        """
        return f"Тигр: Хищное животное. Семейство: {self.family}. Размер: {self.size}."

    def __repr__(self) -> str:
        """
        Перегрузка магического метода __repr__ с указанием высоты прыжка тигра для создания валидного выражения
        для воссоздания объекта "Тигр"
        :return: Строковое представление объекта "Тигр"
        """
        return f"{self.__class__.__name__}(family={self.family!r}, size={self.size!r}, jump={self.jump!r})"


if __name__ == "__main__":
    tiger = Tiger('Кошачьи', 'Крупный', 5.0)
    tiger.habitat('Азия')
    tiger.movement(50)
    pass
